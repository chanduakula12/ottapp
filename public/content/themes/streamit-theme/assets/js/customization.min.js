"use strict";

function _typeof(e) {
    return (_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
        return typeof e
    } : function(e) {
        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
    })(e)
}

function continueWatchHandler(e) {
    var t, n = document.querySelector(".iq-main-slider video").player;
    n.setCurrentTime(null === (t = php_prefix_continue_watch) || void 0 === t ? void 0 : t.watchedTime.watchedTime), n.play(), jQuery(e).closest(".css_prefix-video-continue-watch-container").fadeOut()
}

function continueWatchRemoveHandler(e) {
    jQuery(e).closest(".css_prefix-video-continue-watch-container").fadeOut()
}

function watchHandler(e, t, n) {
    jQuery.ajax({
        url: streamit_loadmore_params.ajaxurl,
        async: !1,
        data: {
            action: "php_prefix_update_watched",
            postID: php_prefix_continue_watch.ID,
            watchedTime: e,
            watchedTotalTime: t,
            watchedTimePercentage: n,
            nonce: php_prefix_continue_watch.nonce
        },
        type: "GET"
    })
}

function watchedAjaxHandler() {
    jQuery.ajax({
        url: streamit_loadmore_params.ajaxurl,
        async: !1,
        data: {
            action: "php_prefix_delete_watched",
            postID: php_prefix_continue_watch.ID,
            nonce: php_prefix_continue_watch.nonce
        },
        type: "GET"
    })
}! function(t) {
    t(document).ready(function() {
        t(".remodal").wrap('<div class="streamit-model-wrapper"></div>')
    }), t(window).on("load", function() {
        var e;
        "undefined" != typeof php_prefix_continue_watch && "object" == _typeof(null === (e = php_prefix_continue_watch) || void 0 === e ? void 0 : e.watchedTime) && t(".css_prefix-video-continue-watch-container").closest(".css_prefix-video-continue-watch-container").fadeIn()
    })
}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImN1c3RvbWl6YXRpb24uanMiXSwibmFtZXMiOlsiY29udGludWVXYXRjaEhhbmRsZXIiLCJfdGhpcyIsIl9waHBfcHJlZml4X2NvbnRpbnVlXzIiLCJjb250ZW50UGxheWVyIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwicGxheWVyIiwialF1ZXJ5Iiwic2V0Q3VycmVudFRpbWUiLCJwaHBfcHJlZml4X2NvbnRpbnVlX3dhdGNoIiwid2F0Y2hlZFRpbWUiLCJwbGF5IiwiZmFkZU91dCIsIndhdGNoSGFuZGxlciIsImN1cnJlbnRUaW1lIiwidG90YWx0aW1lIiwicGVyY2VudCIsImFqYXgiLCJ1cmwiLCJjb250aW51ZVdhdGNoUmVtb3ZlSGFuZGxlciIsImFzeW5jIiwiZGF0YSIsImFjdGlvbiIsInN0cmVhbWl0X2xvYWRtb3JlX3BhcmFtcyIsIndhdGNoZWRUaW1lUGVyY2VudGFnZSIsIm5vbmNlIiwidHlwZSIsIndhdGNoZWRBamF4SGFuZGxlciIsImFqYXh1cmwiLCJwb3N0SUQiLCJJRCIsInJlYWR5Iiwid3JhcCIsIndpbmRvdyIsIm9uIiwiX3BocF9wcmVmaXhfY29udGludWVfIiwiX3R5cGVvZiIsImNsb3Nlc3QiLCJmYWRlSW4iXSwibWFwcGluZ3MiOiI4UEFTUyxTQUFBQSxxQkFBQUMsR0FBQSxJQUFBQyxFQUhMQyxFQUFBQyxTQUFBQyxjQUFBLHlCQUFBQyxPQUtEQyxFQVZIQyxlQVVHRCxRQUFBQSxFQVZIRSxpQ0FVR0YsSUFBQUEsT0FBQUEsRUFWSEwsRUFBQVEsWUFBQSxhQWVJUCxFQUFjUSxPQUhsQkosT0FBU1AsR0FBQUEsUUFBQUEsOENBQTRCWSxVQUNqQyxTQUFJVCwyQkFBeUJFLEdBQzdCRixPQUFBQSxHQUFjSyxRQUFBQSw4Q0FBZUMsVUFHaEMsU0FBQUksYUFBQUMsRUFBQUMsRUFBQUMsR0FPR1QsT0FBT1UsS0FBSyxDQUxoQkMsSUFBU0MseUJBQTJCbEIsUUFDMUJtQixPQUFOLEVBQ0hDLEtBQUEsQ0FPV0MsT0FBVSw0QkFMYlQsT0FBYUMsMEJBQXdCRSxHQUNuQ0MsWUFBS0gsRUFDSFMsaUJBQUFBLEVBQWtDQyxzQkFBQVIsRUFDaENTLE1BRkNoQiwwQkFBQWdCLE9BSUpDLEtBQUEsUUFJQSxTQUFBQyxxQkFDQXBCLE9BQUFVLEtBQVNSLENBVExTLElBQUFLLHlCQUFBSyxRQVdKUixPQUFFLEVBWFZDLEtBQUEsQ0FhSEMsT0FBQSw0QkFRV08sT0FBVXBCLDBCQUEwQnFCLEdBTnZDSCxNQUFBQSwwQkFBcUJGLE9BRW5CQyxLQUFFSCxTQXpDYixTQUFXaEIsR0FDUEEsRUFBT0gsVUFBVTJCLE1BQU0sV0FDbkJ4QixFQUFPLFlBQVl5QixLQUFLLGdEQUF4QnpCLEVBQU8wQixRQUFBQyxHQUFQLE9BQXdCLFdBQUEsSUFBQUMsRUFENUIsb0JBQUExQiwyQkFBQSxVQUFBMkIsUUFBQSxRQUFBRCxFQUFBMUIsaUNBQUEsSUFBQTBCLE9BQUEsRUFBQUEsRUFBQXpCLGNBSU91QixFQUFQLDhDQUFzQ0ksUUFBQSw4Q0FBQUMsV0FMMUMsQ0FNUS9CIiwiZmlsZSI6ImN1c3RvbWl6YXRpb24ubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG4oZnVuY3Rpb24gKGpRdWVyeSkge1xuICAgIGpRdWVyeShkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24gKCkge1xuICAgICAgICBqUXVlcnkoJy5yZW1vZGFsJykud3JhcCgnPGRpdiBjbGFzcz1cInN0cmVhbWl0LW1vZGVsLXdyYXBwZXJcIj48L2Rpdj4nKTtcbiAgICB9KTtcblxuICAgIGpRdWVyeSh3aW5kb3cpLm9uKCdsb2FkJywgZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAodHlwZW9mIHBocF9wcmVmaXhfY29udGludWVfd2F0Y2ggIT09ICd1bmRlZmluZWQnICYmIHR5cGVvZiBwaHBfcHJlZml4X2NvbnRpbnVlX3dhdGNoPy53YXRjaGVkVGltZSA9PSAnb2JqZWN0Jykge1xuICAgICAgICAgICAgalF1ZXJ5KCcuY3NzX3ByZWZpeC12aWRlby1jb250aW51ZS13YXRjaC1jb250YWluZXInKS5jbG9zZXN0KCcuY3NzX3ByZWZpeC12aWRlby1jb250aW51ZS13YXRjaC1jb250YWluZXInKS5mYWRlSW4oKTtcbiAgICAgICAgfVxuICAgIH0pO1xufSkoalF1ZXJ5KTtcblxuZnVuY3Rpb24gY29udGludWVXYXRjaEhhbmRsZXIoX3RoaXMpIHtcbiAgICBsZXQgY29udGVudFBsYXllciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuaXEtbWFpbi1zbGlkZXIgdmlkZW9cIikucGxheWVyO1xuICAgIGNvbnRlbnRQbGF5ZXIuc2V0Q3VycmVudFRpbWUocGhwX3ByZWZpeF9jb250aW51ZV93YXRjaD8ud2F0Y2hlZFRpbWVbJ3dhdGNoZWRUaW1lJ10pO1xuICAgIGNvbnRlbnRQbGF5ZXIucGxheSgpO1xuICAgIGpRdWVyeShfdGhpcykuY2xvc2VzdCgnLmNzc19wcmVmaXgtdmlkZW8tY29udGludWUtd2F0Y2gtY29udGFpbmVyJykuZmFkZU91dCgpO1xufVxuXG5mdW5jdGlvbiBjb250aW51ZVdhdGNoUmVtb3ZlSGFuZGxlcihfdGhpcykge1xuICAgIGpRdWVyeShfdGhpcykuY2xvc2VzdCgnLmNzc19wcmVmaXgtdmlkZW8tY29udGludWUtd2F0Y2gtY29udGFpbmVyJykuZmFkZU91dCgpO1xufVxuXG5mdW5jdGlvbiB3YXRjaEhhbmRsZXIoY3VycmVudFRpbWUsIHRvdGFsdGltZSwgcGVyY2VudCkge1xuICAgIGpRdWVyeS5hamF4KHtcbiAgICAgICAgdXJsOiBzdHJlYW1pdF9sb2FkbW9yZV9wYXJhbXMuYWpheHVybCwgLy8gQUpBWCBoYW5kbGVyXG4gICAgICAgIGFzeW5jOiBmYWxzZSxcbiAgICAgICAgZGF0YToge1xuICAgICAgICAgICAgJ2FjdGlvbic6ICdwaHBfcHJlZml4X3VwZGF0ZV93YXRjaGVkJyxcbiAgICAgICAgICAgICdwb3N0SUQnOiBwaHBfcHJlZml4X2NvbnRpbnVlX3dhdGNoLklELFxuICAgICAgICAgICAgJ3dhdGNoZWRUaW1lJzogY3VycmVudFRpbWUsXG4gICAgICAgICAgICAnd2F0Y2hlZFRvdGFsVGltZSc6IHRvdGFsdGltZSxcbiAgICAgICAgICAgICd3YXRjaGVkVGltZVBlcmNlbnRhZ2UnOiBwZXJjZW50LFxuICAgICAgICAgICAgJ25vbmNlJzogcGhwX3ByZWZpeF9jb250aW51ZV93YXRjaC5ub25jZSxcbiAgICAgICAgfSxcbiAgICAgICAgdHlwZTogJ0dFVCcsXG4gICAgfSk7XG59XG5cbmZ1bmN0aW9uIHdhdGNoZWRBamF4SGFuZGxlcigpIHtcbiAgICBqUXVlcnkuYWpheCh7XG4gICAgICAgIHVybDogc3RyZWFtaXRfbG9hZG1vcmVfcGFyYW1zLmFqYXh1cmwsIC8vIEFKQVggaGFuZGxlclxuICAgICAgICBhc3luYzogZmFsc2UsXG4gICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgICdhY3Rpb24nOiAncGhwX3ByZWZpeF9kZWxldGVfd2F0Y2hlZCcsXG4gICAgICAgICAgICAncG9zdElEJzogcGhwX3ByZWZpeF9jb250aW51ZV93YXRjaC5JRCxcbiAgICAgICAgICAgICdub25jZSc6IHBocF9wcmVmaXhfY29udGludWVfd2F0Y2gubm9uY2UsXG4gICAgICAgIH0sXG4gICAgICAgIHR5cGU6ICdHRVQnLFxuICAgIH0pO1xufVxuIl19